
* 遇到的问题
1. 设置键位打开了一个新窗口，这两个窗口需要通信。但是window.open在chrome下的返回值
   为null。改成在子窗口中通过window.opener访问父窗口中的对象
2. css和js没有分离，部分样式在js中设置，导致响应化设计时还需要更改js文件。需要监听resize
   事件，在事件处理函数中修改cellSize，并重新显示board和tile
3. 判断能否移动时要确保board[i][j]不为0

* 动画实现
1. 增加分数
   用css3动画，修改top和opacity
2. 生成tile
   改变opacity和transform
3. 游戏结束提示
   改变opacity
4. 移动动画
   求得要移动的px数，除以调用setTimeout的次数，获得每次调用setTimeout需移动的距离
   移动完毕后调用updateBoard

* 游戏逻辑
1. 向左移动
   找到左边第一个非0的位置，若满足下面条件之一可以移动到该位置的右侧
   + 该位置超出了边界
   + 该位置和当前位置中间有格子且该位置上的值和当前位置上的值不相等
   + 该位置和当前位置中间有格子且该位置上的值和当前位置上的值相等，但已经合并过了
   满足下面的条件可以进行合并
   + 值相等，且该位置未进行过合并

* 心得
1. css和js尽量分离，js中修改样式只更改classList
2. 响应化设计从一开始就要考虑
3. 每个模块用一个对象表示，避免全局变量
4. 移动可以用一个函数完成，传入参数direction
